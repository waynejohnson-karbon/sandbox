name: PR from Lokalise

on: workflow_dispatch

jobs:
  lokalise:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Lokalise Download
        run: |
          response=$(curl --request POST \
          --url https://api.lokalise.com/api2/projects/388922246710958f0774f6.27264383/files/async-download \
          --header 'X-Api-Token: ${{ secrets.LOKALISE_KEY }}' \
          --header 'accept: application/json' \
          --header 'content-type: application/json' \
          --data '
          {
          "triggers": [
            "github"
          ],
          "format": "yaml",
          "original_filenames": true,
          "directory_prefix": "/",
          "all_platforms": true,
          "export_sort": "a_z",
          "export_empty_as": "empty",
          "include_comments": false,
          "include_description": false,
          "replace_breaks": false,
          "disable_references": false,
          "plural_format": "icu",
          "placeholder_format": "icu",
          "icu_numeric": true,
          "indentation": "2sp",
          "yaml_include_root": false
          }')
          process_id=$(echo $response | grep -o '"process_id":"[^"]*' | sed 's/"process_id":"//')
          echo "Lokalise async download process ID: $process_id"
          while true; do
          process_info=$(curl --request GET \
          --url https://api.lokalise.com/api2/projects/388922246710958f0774f6.27264383/processes/$process_id \
          --header 'X-Api-Token: ${{ secrets.LOKALISE_KEY }}' \
          --header 'accept: application/json')
          status=$(echo "$process_info" | grep -o '"status":"[^"]*' | sed 's/"status":"//')
          if [[ "$status" == "finished" ]]; then
            download_url=$(echo "$process_info" | grep -o '"download_url":"[^"]*' | sed 's/"download_url":"//')
            echo "Download URL: $download_url"
            break
          elif [[ "$status" == "failed" ]]; then
            echo "Async download failed."
            exit 1
          fi
          echo "Waiting for process to complete..."
          sleep 2
          done
